
@{
    ViewBag.Title = "APSmini";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.7.7/xlsx.core.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xls/0.7.4-a/xls.core.min.js"></script>

<style>
    h5, h6, p {
        padding: 8px;
    }

    .hide-button {
        display: none;
        color: gray;
    }

        .hide-button a {
            text-decoration: none;
            color: gray;
        }

            .hide-button a:hover {
                color: red;
            }

    .card:hover {
        background-color: #2e2c2c !important;
        color: white;
    }

        .card:hover .hide-button {
            display: block;
        }

    label.error {
        color: red;
    }

    input.error {
        border-color: #ff0000;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    }

        input.error:focus {
            border-color: #ff0000;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c35e5e;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c35e5e;
        }

    select.error:focus {
        border-color: #ff0000;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c35e5e;
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c35e5e;
    }
</style>

<!--Memo Page-->
<div class="row">
    <div class="col-md-2 col-lg-2"></div>
    <div class="col-md-8 col-lg-8 container-fluid">
        <!--HEADER-->
        <h3>
            Work Station
            <!--Create Memo Button-->
            <button class="btn btn-danger" style="float:right; margin-right:5px;" id="right" onclick="return pagenation(this.id);"><i class="fa fa-angle-right"></i></button>
            <button class="btn btn-danger" style="float:right; margin-right:5px;" id="left" onclick="return pagenation(this.id);"><i class="fa fa-angle-left"></i></button>
            <button data-target="#createNewWorkStation" data-toggle="modal" class="btn btn-primary" style="float:right; margin-right:5px;">
                생성
            </button>

            <!--Create Memo Button-->
        </h3>
        <!--HEADER-->
        <hr />

        <!--Memo Container-->
        <div class="row" id="WorkStationContainer">

        </div>
        <!--Memo Container-->
    </div>
    <div class="col-md-2 col-lg-2"></div>
</div>
<!--Memo Page-->
<!--Create WorkStation Modal-->
<div class="modal fade" draggable="true" id="createNewWorkStation" tabindex="-1" role="dialog" aria-labelledby="myModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <h4 class="modal-title" id="myModal-label">Create Work Station</h4>
            </div>
            <!--Header-->
            <div class="modal-body">
                <form id="form-createWorkStation">
                    <!--Title-->
                    <div class="form-group">
                        <div class="form-inline">
                            <label class="control-label" for="Title">Title &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </label>
                            <input type="text" name="Title" id="Title" value="" class="form-control" style="max-width:70%; margin-left:10px;" maxlength="115" autofocus placeholder="Work Station Title" required />
                        </div>
                    </div>
                    <!--Ttitle-->
                    <div class="form-group">
                        <div class="form-inline">
                            <label class="control-label" for="workStationImage">Image &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : </label>
                            <!--Upload Work Station Image-->
                            <input type="file" name="workStationImage" id="workStationImage" value="" style="max-width:50%; margin-left:11px;" />
                            <!--Upload Work Station Image-->
                        </div>
                    </div>
                    <!--Description-->
                    <div class="form-group">
                        <div class="form-inline">
                            <label class="control-label" for="Description">Description &nbsp;&nbsp; : </label>
                            <input type="text" name="Description" id="Description" value="" class="form-control" style="max-width:70%; margin-left:10px;" maxlength="28" autofocus placeholder="Work Station Definition" required />
                        </div>
                    </div>
                    <!--Description-->
                    <!-- Standard Setup Time-->
                    <div class="form-group">
                        <div class="form-inline">
                            <label class="control-label" for="SetupTime">Setup Time &nbsp;&nbsp; : </label>
                            <input type="number" name="SetupTime" id="SetupTime" value="" class="form-control" style="max-width:50%; margin-left:10px;" maxlength="10" autofocus placeholder="Setup Time(m)" required />
                        </div>
                    </div>
                    <!-- Standard Setup Time-->
                    <!-- Standard Processing Time-->
                    <div class="form-group">
                        <div class="form-inline">
                            <label class="control-label" for="ProcessingTime">Processing Time &nbsp;&nbsp; : </label>
                            <input type="number" name="ProcessingTime" id="ProcessingTime" value="" class="form-control" style="max-width:43%; margin-left:10px;" maxlength="10" autofocus placeholder="Processing Time(m)" required />
                        </div>
                    </div>
                    <!-- Standard Processing Time-->
                    <div class="form-group">
                        <div class="form-inline">
                            <label class="control-label" for="RoutingLst"><i style="color:red;">#&nbsp;</i>WorkStation Group &nbsp; : &nbsp; </label>
                            <select id="WorkStationGroupLst" class="form-control custom-select" style="width:36%;">
                                <option value="0"></option>
                            </select>
                            <label class="btn btn-danger" style="margin-left: 5px; height:35px;" data-target="#createWorkStationGroup" data-toggle="modal"><i class="fa fa-plus"></i></label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <!--createMemo Button-->
                <button type="button" class="btn btn-default" data-dismiss="modal" id="modalClose" onclick="clearInput();">Close</button>
                <button type="button" class="btn btn-primary" onclick="creatWorkStation();">Create</button>
                <!--createMemo Button-->
            </div>
        </div>
    </div>
</div>
<!--Create WorkStation Modal-->
<!--Work Station Group-->
<div class="modal fade" id="createWorkStationGroup" tabindex="-1" role="dialog" aria-labelledby="Warning-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Create WorkStation Group</h4>
            </div>
            <div class="modal-body">
                <form id="form-groupmodal">
                    <div class="form-group" style="padding-top:10px;">
                        <div class="form-inline" style="margin-top: auto; margin-bottom:auto;">
                            <label class="control-label" for="CreateNewGroup">New Group : </label>
                            <input type="text" name="CreateNewWorkStationGroup" id="NewWorkStationGroup" value="" class="form-control" style="max-width:70%; margin-left:10px;" maxlength="115" autofocus placeholder="New WorkStation Group" required />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="createWorkStationGroupModalClose" onclick="clearWorkStationGroupModal();">Close</button>
                <button type="button" class="btn btn-primary" onclick="return createNewWorkStationGroup();" id="CreateNewWorkStationGroupBtn">Create</button>
            </div>
        </div>
    </div>
</div>
<!--Work Station Group-->
<input type="hidden" id="pageCount" name="pageCount" value="" />
<script>
    $(document).ready(function () {

        // Bind WorkStationGroup Lst Data (Set Eqal WorkStation)
        $.ajax({
            type: "GET",
            url: "/api/WorkStationGroup/" + @Session["GroupUID"],
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                $.each(response, function (key, value) {
                    // Option tag Data bind
                    var workStationLst = "<option value=\"" + value.WorkStationGroupID + "\" >" + value.WorkStationGroupTitle + "</option>";
                    $('#WorkStationGroupLst').append(workStationLst);
                })
            }
        });


        // Create New Product Modal Validation
        $('#form-createWorkStation').validate({
            rules: {
                Title: {
                    required: true,
                },
                Description: {
                    required: true,
                },
                SetupTime: {
                    required: true,
                    number: true
                },
                ProcessingTime: {
                    required: true,
                    number: true
                },
            },
            messages: {
                Title: {
                    required: "",
                },
                Description: {
                    required: "",
                },
                SetupTime: {
                    required: "",
                    number: ""
                },
                ProcessingTime: {
                    required: "",
                    number: ""
                },
            }
        });


        var page = 0;
        $('#pageCount').val(page);

        // newMemo Modal auto focus
        $('#createNewWorkStation').on('shown.bs.modal', function () {
            $('#newWorkStation').focus();
        });


        // Save workStation order before move out from this page
        $(window).on('beforeunload', function () {
           saveWorkStationOrder();
        });


        // Show ALL Data to Memo Container
        DisplayWorkStation(page);


        // Bind sortable attr to memoContainer
        $('#WorkStationContainer').sortable({
            connectWith: '#WorkStationContainer',
            update: function (e, ui) {
            }
        });

        $('#WorkStationContainer').disableSelection();


        // Delete Memo Event Handler
        $('#WorkStationContainer').on('click', '.fa', function (event) {
            var id = $(event.target).attr('id');

            if (confirm('Routing 정보도 같이 삭제됩니다. 정말 삭제하시겠습니까?')) {
                // Memo Delete API wtih (MEMO Controller)
                $.ajax({
                    type: "DELETE",
                    url: "/api/WorkStation/" + id,
                    dataType: "json",
                    success: function (response) {
                        ClearWorkStation();
                        DisplayWorkStation($('#pageCount').val());
                    }
                });
            }
        });
    });

    // Javascript pagenation
    function pagenation(id) {
        var count = 0;
        $('#WorkStationContainer').find('.card').each(function () {
            count++;
        });

        saveWorkStationOrder();
        var page = parseInt($('#pageCount').val());
        if (id == "right") {
            if (count < 8) {
                return false;
            }
            $('#pageCount').val(page + 1);
            ClearWorkStation();
            DisplayWorkStation($('#pageCount').val());
        } else {
            if (page == 0) {

            } else {
                $('#pageCount').val(page - 1);
                ClearWorkStation();
                DisplayWorkStation($('#pageCount').val());
            }
        }
    }

    // Create New WorkStation Group -- !! Should be updated someday..
    function createNewWorkStationGroup() {
        var workStationGroupTitle = $("#NewWorkStationGroup").val();
        var json = "{ GroupUID : \"" + @Session["GroupUID"] + "\",  WorkStationGroupTitle : \"" + workStationGroupTitle + "\"}";

        // Create WorkStation Group 
        $.ajax({
            type: "POST",
            url: "/api/WorkStationGroup/",
            data: json,
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (value) {
                // Option tag Data bind
                var workStationLst = "<option value=\"" + value.WorkStationGroupID + "\" >" + value.WorkStationGroupTitle + "</option>";
                $('#WorkStationGroupLst').append(workStationLst);
                $("#createWorkStationGroupModalClose").click();
            }
        });
    }

    // Clear workStation Group Modal
    function clearWorkStationGroupModal() {
        $("#createWorkStationGroupModalClose").val();
    }

    // Clear newMemo input form
    function clearInput() {
        $('#Title').val('');
        $('#workStationImage').val('');
        $('#Description').val('');
        $('#SetupTime').val('');
        $('#ProcessingTime').val('');
        $('#WorkStationLst').val('0');
        $('#WorkStationGroupLst').val('0');

        $('#form-createWorkStation').validate().resetForm();
    };


    // Create newMemo API with (MEMO Controller)
    function creatWorkStation() {
        var count = 0;
        if ($('#Title').valid() == false) {
            count++;
        }
        if ($('#Description').valid() == false) {
            count++;
        }
        if ($('#SetupTime').valid() == false) {
            count++;
        }
        if ($('#ProcessingTime').valid() == false) {
            count++;
        }
        if (count > 0) {
            return false;
        }

        var data = new FormData();
        var files = $('#workStationImage').get(0).files;
        if (files.length > 0) {
            data.append("UploadImage", files[0]);
        }
        var imageName;

        // Save Image File to DB
        $.ajax({
            type: "POST",
            url: "/api/Image/",
            contentType: false,
            processData: false,
            data: data,
            async: false,
            success: function (filename) {
                imageName = filename;
            }
        });

        var title = $('#Title').val();
        var description = $('#Description').val();
        var setupTime = $('#SetupTime').val();
        var processingTime = $('#ProcessingTime').val();
        var workStationGroup = $('#WorkStationGroupLst').val();

        if (imageName == null) {
            imageName = "DefaultImage.png";
        }

        var json = "{ Image : \"" + imageName + "\",  Title : \"" + title + "\", Description : \"" + description + "\", SetupTime : \"" + setupTime + "\", ProcessingTime : \"" + processingTime + "\", GroupUID : \"" + @Session["GroupUID"] + "\" , WorkStationGroupID : \"" + workStationGroup + "\" }";

        // create new workStation
        $.ajax({
            type: "POST",
            url: "/api/WorkStation/",
            data: json,
            dataType: "json",
            async: false,
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                $('#modalClose').click();
                ClearWorkStation();
                DisplayWorkStation($('#pageCount').val());
            }
        });
    };


    // Get All Memo List API with (MEMO Controller)
    function DisplayWorkStation(page) {

        $.getJSON("/api/WorkStation/" + @Session["GroupUID"] + "/" + page,
            function (data, textStatus, jqXHR) {
                var result = '';
                $.each(data, function (key, response) {
                    var image = response.Image;
                    if (image === null) {
                        image = "DefaultImage.png";
                    }
                    var workStation = "<div class='col-md-6' id='"+ response.WId + "'><div class='card' style='height:200px; background-color: white;' draggable='true'><div class='row'>";
                    workStation += "<div class='col-md-3' style = 'width:80%; height:180px; margin-top:10px; margin-left:25px; margin-right:25px;'><img src='/Image/" + image + "' style= 'width:100%; height:180px;'></div>";
                    workStation += "<div class='col-md-8' style='margin-top:5px;'><h5 class='card-title'><span class='hide-button' style='float: right; padding-right: 5px;'>";
                    workStation += "<a href = '#'><i class='fa fa-remove' id='" + response.WId + "'></i ></a ></span >";
                    if (response.WorkStationGroupID == 0) {
                        workStation += "<span style='margin-top:5px;'><i class='fa fa-caret-right'></i> Title : " + response.Title + "</span><br /><br />";
                    } else {
                        workStation += "<span style='margin-top:5px;'><i class='fa fa-caret-right'></i> Title : " + response.Title + " (G: " + response.WorkStationGroupID + ")</span><br /><br />";
                    }
                    workStation += "<span><i class='fa fa-caret-right'></i> Description : " + response.Description + "</span><br /><br />";
                    workStation += "<span><i class='fa fa-caret-right'></i> Setup Time : " + response.SetupTime + "(m)</span ><br /><br />";
                    workStation += "<span><i class='fa fa-caret-right'></i> Processing Time : " + response.ProcessingTime + "(m)</span>";
                    workStation += "</h5></div></div></div></div>";
                    result += workStation;
                });
                $('#WorkStationContainer').append(result);
            }
        );
    };


    // Clear Memo Container
    function ClearWorkStation() {
        $('#WorkStationContainer').html('');
    };


    // Save Display Order of Memos
    function saveWorkStationOrder() {
        // Save sortable array data
        var order = $('#WorkStationContainer').sortable('toArray');
        var json = "{ Title : \"" + order + "\"}";
        var page = parseInt($('#pageCount').val());

        $.ajax({
            type: "PUT",
            url: "/api/WorkStation/" + @Session["GroupUID"] +"/"+ page,
            data: json,
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                // Empty
            }
        });
    };

</script>




