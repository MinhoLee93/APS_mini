
@{
    ViewBag.Title = "APSmini";
}
@model  APS.Models.Views.Routing

<script src="https://cdnjs.cloudflare.com/ajax/libs/jsPlumb/2.5.8/js/jsplumb.min.js"></script>
<script src="~/Scripts/jquery.simulate.js"></script>
<style>
    #WorkStationContainer {
        background: white;
        box-shadow: 2px 1px 2px rgba(0,0,0,.1);
        /*position: fixed;
        top: 56px;
        flex-direction: column !important;
        left: 0px;*/
        width: 200px;
        padding: 0px;
        overflow-y: auto;
        overflow-x: hidden;
        /*bottom: 0;
        padding-bottom: 40px*/
        height: 1000px;
    }

    ul li {
        list-style: none;
    }

    li[id^="item"] {
        height: 40px;
        left: 0px;
        bottom: 0;
        top: 0;
        margin: 0px;
        padding: 0px;
        position: relative;
        flex-direction: column !important;
        z-index: 1;
    }
</style>
<div class="row">
    <div class="col-md-2 col-lg-2">

        <ul id="WorkStationContainer">
            @*<li class="nav-item" style="text-align:center;">
                    <div class='card' style='width:200px; height:100%; background-color: white;' draggable='true'><span style="margin:auto;">&nbsp;&nbsp;&nbsp;</span></div>
                </li>*@
        </ul>
    </div>

    <div class="col-md-8 col-lg-8 container-fluid">
        <div>
            <h3 style="display:inline-block;">Routing</h3>
            <button data-target="#ModalCreateRouting" data-toggle="modal" class="btn btn-primary" style="float:right;" id="createRouting" name="createRouting">등록</button>
            <button data-target="#" class="btn btn-danger" style="float:right; margin-right:5px;" id="deleteRouting" name="deleteRouting" onclick="removeProduct();">제거</button>
            
            <select class="custom-select" style="width:120px; margin-right:5px; float:right;" id="RoutingLst" name="RoutingLst" onchange="bindRoutingData();">
                <option style="padding-left:10px;" value="0"></option>
            </select>
        </div>
        <hr />
        <ul class="row" id="RoutingContainer" style="width:100%; height: 900px; border:1px dotted red; margin-left:3px; background-color: #ababab; border-radius:5px; z-index:-1;">
            <!--내용 Container-->
            @*<div style=" color:#ababab; position:absolute; " class="item" id="start"></div>
                <div style=" color:#ababab; position:absolute;" class="item" id="end"></div>*@
        </ul>
    </div>
    <div class="col-md-2 col-lg-2"></div>
</div>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModal-label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModal-label">Modal title</h4>
            </div>
            <div class="modal-body">
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<!--Create Routing Modal-->
<div class="modal fade" id="ModalCreateRouting" tabindex="-1" role="dialog" aria-labelledby="Warning-label" style="top:400px; left:0px; position:absolute; ">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Group Management</h4>
            </div>
            <div class="modal-body">
                <form id="form-groupmodal">
                    <div class="form-group" style="padding-top:10px;">
                        <div class="form-inline" style="margin-top: auto; margin-bottom:auto;">
                            <label class="control-label" for="CreateNewRouting">Create New Routing : </label>
                            <input type="text" name="CreateNewRouting" id="CreateNewRouting" value="" class="form-control" style="max-width:70%; margin-left:10px;" maxlength="115" autofocus placeholder="Write New Routing Name." required />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" id="CreateRoutingModalClose" onclick="clearRoutingModal();">Close</button>
                <button type="button" class="btn btn-primary" onclick="createRouting();" id="createNewRoutingBtn">Create</button>
            </div>
        </div>
    </div>
</div>
<!--Create Routing Modal-->

<script>
    $(document).ready(function () {
        var common = {
            isSource: true,
            isTarget: true
        };

        $('#RoutingLst').val("2");

        displayWorkStationList(@Session["GroupUID"]);
        dragAnddrop();

        // Bind Routing Lst Data
        $.ajax({
            type: "GET",
            url: "/api/Routing/" + @Session["GroupUID"],
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                $.each(response, function (key, value) {
                    // Option tag Data bind
                    var routingLst = "<option value=\"" + value.RID + "\" >" + value.RoutingName + "</option>";
                    $('#RoutingLst').append(routingLst);
                })
            }
        });

        jsPlumb.ready(function () {

        });
    })

    function dragAnddrop() {
        var dropped = false;

        //$('#WorkStationContainer').sortable({
        //    revert: true,
        //    stop: function (event, ui) {
        //        ui.getUuid
        //    }
        //});

        $('li[id^="item"]').draggable({
            helper: function () {
                $copy = $(this).clone();
                return $copy;
            },

            start: function (event, ui) {
                dropped = false;
                // $(this).addClass("hide");
            },

            stop: function (event, ui) {

                if (dropped == true) {
                    $(this).remove();
                } else {
                    dropped = false
                    //  $(this).removeClass("hide");
                }
                $('#' + $(this).attr('id')).draggable({
                    connectToSortable: "#RoutingContainer",
                    //helper: "clone",
                    revert: "invalid",
                    stop: function () {
                        jsPlumb.empty('#WorkStationContainer');
                    }
                });

                if ($(this).attr('id') == "itemstart") {
                    $('#' + $(this).attr('id') + " > .card").css('background-color', 'red').css('width', '50');
                } else if ($(this).attr('id') == "itemend") {
                    $('#' + $(this).attr('id') + " > .card").css('background-color', '#007bff').css('width', '50');
                } else {
                    $('#' + $(this).attr('id')).dblclick(function (e) {
                        $('#myModal').css({ top: 400, left: 0, position: 'absolute' });
                        $('#myModal').modal('toggle');
                    });
                    $('#' + $(this).attr('id') + " > .card").css('background-color', 'white').mouseover(function () {
                        $(this).css("background-color", "#007bff");
                    }).mouseout(function () {
                        $(this).css("background-color", "white");
                    });
                }

                //jsPlumb.addEndpoint($(this), {
                //    isSource: true,
                //    isTarget: false,
                //    anchor: "Right"
                //})
            }
        });



        $("#RoutingContainer").droppable({
            accept: '.draggable',
            containment: '#RoutingContainer',

            drop: function (event, ui) {
                dropped = true;
                droppedElement = ui.helper;
                droppedElement.appendTo('#RoutingContainer');

                $.ui.ddmanager.current.cancelHelperRemoval = true;
                revert: "invalid"

                $(droppedElement).addClass('node');
                if ($(droppedElement).hasClass('droped')) {

                } else {
                    if ($(droppedElement).attr('id') == "itemstart") {
                        jsPlumb.addEndpoint($(droppedElement), {
                            maxConnections: -1,
                            isSource: true,
                            isTarget: false,
                            anchor: "Right"
                        });
                        $(droppedElement).addClass('droped');
                    } else if ($(droppedElement).attr('id') == "itemend") {
                        jsPlumb.addEndpoint($(droppedElement), {
                            maxConnections: -1,
                            isSource: false,
                            isTarget: true,
                            anchor: "Left"
                        });
                        $(droppedElement).addClass('droped');
                    } else {
                        jsPlumb.addEndpoint($(droppedElement), {
                            maxConnections: -1,
                            isSource: true,
                            isTarget: false,
                            anchor: "Right"
                        });

                        jsPlumb.addEndpoint($(droppedElement), {
                            maxConnections: -1,
                            isSource: false,
                            isTarget: true,
                            anchor: "Left"
                        });
                        $(droppedElement).addClass('droped');
                    }
                }
               
                $('.draggable').draggable({
                    drag: function () {
                        jsPlumb.repaintEverything();
                    }
                })
            }
        });
    }

    function clearRoutingModal() {
        $('#CreateNewRouting').val('');
    }

    function bindRoutingData() {
        var rid = $('#RoutingLst').val();
        $('#RoutingContainer').html('');
        $('#WorkStationContainer').html('');
        $('.jtk-endpoint').remove();

        displayWorkStationList(@Session["GroupUID"]);
        dragAnddrop();

        $.ajax({
            type: "GET",
            url: "/api/Routing/" + @Session["GroupUID"] + "/" + rid,
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var node = [];
                var connection = [];
                $.each(response, function (key, value) {
                    if (value.SourceWID != 0) {
                        node.push({
                            ID: value.SourceWID,
                            positionX: value.X,
                            positionY: value.Y
                        });
                    }

                    if (value.TargetWID != 0) {
                        connection.push({
                            source: value.SourceWID,
                            target: value.TargetWID
                        });
                    }
                })
                //
                for (i = 0; i < node.length; i++) {
                    if (node[i].ID == -1) {
                        $('#itemstart').detach().appendTo("#RoutingContainer").css("top", node[i].positionY).css("left", node[i].positionX).css('position', 'absolute');
                    } else if (node[i].ID == -99) {
                        $('#itemend').detach().appendTo("#RoutingContainer").css("top", node[i].positionY).css("left", (node[i].positionX - 100)).css('position', 'absolute');
                    } else {
                        $('#item' + node[i].ID).detach().appendTo("#RoutingContainer").css("top", node[i].positionY).css("left", node[i].positionX).css('position', 'absolute');
                    }
                }

                for (i = 0; i < connection.length; i++) {
                    var source = node[i].source;
                    var target = node[i].target;
                }
                
                
            }
        });
    }
  
    function createRouting() {
        var routingName = $('#CreateNewRouting').val();
        var nodes = [];
        $('.node').each(function (event, node) {
            nodes.push({
                GroupUID: @Session["GroupUID"],
                RoutingName: routingName,
                SourceID: $(node).attr('id'),
                X: parseInt($(node).css('left')),
                Y: parseInt($(node).css('top'))
            });
        });

        // POST Node data
        $.ajax({
            type: "POST",
            url: "/api/Routing/",
            dataType: "json",
            async: false,
            data: JSON.stringify(nodes),
            contentType: 'application/json; charset=utf-8',
            success: function (value) {
            }
        });

        var connections = [];
        $.each(jsPlumb.getConnections(), function (event, connection) {
            connections.push({
                RoutingName: routingName,
                SourceID: connection.sourceId,
                TargetID: connection.targetId
            });
        });

        // POST Connection data 
        $.ajax({
            type: "POST",
            url: "/api/Routing/",
            dataType: "json",
            async: false,
            data: JSON.stringify(connections),
            contentType: 'application/json; charset=utf-8',
            success: function (value) {
            }
        });

        $('#CreateRoutingModalClose').click();
    }

    function displayWorkStationList(groupUID) {


        var start = "<li class='draggable' style='text-align:center;' id='itemstart'><div class='card start' style='width:190px; height:100%; background-color:red;'><span style='margin:auto; color:white;'>Start</span></div></li>";
        var end = "<li class='draggable' style='text-align:center;' id='itemend'><div class='card end' style='width:190px; height:100%; background-color:#007bff;'><span style='margin:auto; color:white;'>End</span></div></li>";

        $('#WorkStationContainer').append(start);
        $('#WorkStationContainer').append(end);

        $.ajax({
            type: "GET",
            url: "/api/WorkStation/" + groupUID,
            async: false,
            dataType: "json",
            success: function (response) {
                $.each(response, function (key, value) {
                    var workStation = "<li class='draggable' style='text-align:center;' id='item" + value.WId + "'>";
                    workStation += "<div class='card' style='width:190px; height:100%;'>";
                    workStation += "<span style='margin:auto;'>" + value.Title + "</span>";

                    $('.card').not('.start').not('.end').mouseover(function () {
                        $(this).css("background-color", "#007bff");
                    }).mouseout(function () {
                            $(this).css("background-color", "transparent");
                        }).dropdown();

                    $('#WorkStationContainer').append(workStation);
                })
            }
        });
    }

</script>

